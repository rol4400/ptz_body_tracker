services:
  ptz-tracker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ptz-camera-tracker
    restart: unless-stopped
    
    # GPU runtime support
    runtime: nvidia
    
    # Network configuration
    network_mode: host
    
    # Environment variables
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - CUDA_VISIBLE_DEVICES=0
    
    # Volume mounts
    volumes:
      - ./config.json:/app/config.json:ro
      - ./logs:/app/logs
      - /tmp/.X11-unix:/tmp/.X11-unix:rw  # For X11 if needed
    
    # Resource limits to prevent resource drain
    deploy:
      resources:
        limits:
          cpus: '4.0'  # Increased for GPU workload
          memory: 2G   # Increased for GPU operations
        reservations:
          cpus: '1.0'
          memory: 512M
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s=socket.socket(); s.settimeout(5); s.connect(('localhost', 8080)); s.close()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Security
    security_opt:
      - no-new-privileges:true
    
    # Capabilities (minimal required)
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE

# Optional: Separate service for development/testing with GUI
  ptz-tracker-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ptz-camera-tracker-dev
    profiles: ["dev"]  # Only run with --profile dev
    
    # GPU runtime support for development
    runtime: nvidia
    
    network_mode: host
    
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG
      - DISPLAY=${DISPLAY}
      - CUDA_VISIBLE_DEVICES=0
    
    volumes:
      - ./config.json:/app/config.json:rw
      - ./logs:/app/logs
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    
    command: ["python", "main_clean.py", "--debug", "--config", "/app/config.json"]
    
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 2G
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]